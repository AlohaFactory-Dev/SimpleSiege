/*
 * Durian API - aloha-demo
 *
 * Durian API (aloha-demo) OpenApi Documentation
 *
 * The version of the OpenAPI document: 0.4.12
 * Contact: devlopment@aloha-corp.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = Alohacorp.Durian.Client.OpenAPIDateConverter;

namespace Alohacorp.Durian.Model
{
    /// <summary>
    /// ChatMessageReqDto
    /// </summary>
    [DataContract(Name = "ChatMessageReqDto")]
    public partial class ChatMessageReqDto
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ChatMessageReqDto" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected ChatMessageReqDto() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="ChatMessageReqDto" /> class.
        /// </summary>
        /// <param name="chatRoomId">chatRoomId (required).</param>
        /// <param name="message">message (required).</param>
        public ChatMessageReqDto(string chatRoomId = default(string), string message = default(string))
        {
            // to ensure "chatRoomId" is required (not null)
            if (chatRoomId == null)
            {
                throw new ArgumentNullException("chatRoomId is a required property for ChatMessageReqDto and cannot be null");
            }
            this.ChatRoomId = chatRoomId;
            // to ensure "message" is required (not null)
            if (message == null)
            {
                throw new ArgumentNullException("message is a required property for ChatMessageReqDto and cannot be null");
            }
            this.Message = message;
        }

        /// <summary>
        /// Gets or Sets ChatRoomId
        /// </summary>
        [DataMember(Name = "chatRoomId", IsRequired = true, EmitDefaultValue = true)]
        public string ChatRoomId { get; set; }

        /// <summary>
        /// Gets or Sets Message
        /// </summary>
        [DataMember(Name = "message", IsRequired = true, EmitDefaultValue = true)]
        public string Message { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ChatMessageReqDto {\n");
            sb.Append("  ChatRoomId: ").Append(ChatRoomId).Append("\n");
            sb.Append("  Message: ").Append(Message).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

    }

}
