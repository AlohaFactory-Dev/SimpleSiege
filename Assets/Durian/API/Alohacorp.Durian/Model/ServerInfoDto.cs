/*
 * Durian API - aloha-demo
 *
 * Durian API (aloha-demo) OpenApi Documentation
 *
 * The version of the OpenAPI document: 0.4.12
 * Contact: devlopment@aloha-corp.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = Alohacorp.Durian.Client.OpenAPIDateConverter;

namespace Alohacorp.Durian.Model
{
    /// <summary>
    /// ServerInfoDto
    /// </summary>
    [DataContract(Name = "ServerInfoDto")]
    public partial class ServerInfoDto
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ServerInfoDto" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected ServerInfoDto() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="ServerInfoDto" /> class.
        /// </summary>
        /// <param name="varVersion">varVersion.</param>
        /// <param name="serverTime">serverTime.</param>
        /// <param name="systemMaintenanceSchedule">systemMaintenanceSchedule.</param>
        /// <param name="appFiles">appFiles.</param>
        /// <param name="systemTimezoneId">systemTimezoneId (required).</param>
        public ServerInfoDto(string varVersion = default(string), DateTime serverTime = default(DateTime), SystemMaintenanceScheduleDto systemMaintenanceSchedule = default(SystemMaintenanceScheduleDto), List<AppFileDto> appFiles = default(List<AppFileDto>), string systemTimezoneId = default(string))
        {
            // to ensure "systemTimezoneId" is required (not null)
            if (systemTimezoneId == null)
            {
                throw new ArgumentNullException("systemTimezoneId is a required property for ServerInfoDto and cannot be null");
            }
            this.SystemTimezoneId = systemTimezoneId;
            this.VarVersion = varVersion;
            this.ServerTime = serverTime;
            this.SystemMaintenanceSchedule = systemMaintenanceSchedule;
            this.AppFiles = appFiles;
        }

        /// <summary>
        /// Gets or Sets VarVersion
        /// </summary>
        [DataMember(Name = "version", EmitDefaultValue = false)]
        public string VarVersion { get; set; }

        /// <summary>
        /// Gets or Sets ServerTime
        /// </summary>
        [DataMember(Name = "serverTime", EmitDefaultValue = false)]
        public DateTime ServerTime { get; set; }

        /// <summary>
        /// Gets or Sets SystemMaintenanceSchedule
        /// </summary>
        [DataMember(Name = "systemMaintenanceSchedule", EmitDefaultValue = false)]
        public SystemMaintenanceScheduleDto SystemMaintenanceSchedule { get; set; }

        /// <summary>
        /// Gets or Sets AppFiles
        /// </summary>
        [DataMember(Name = "appFiles", EmitDefaultValue = false)]
        public List<AppFileDto> AppFiles { get; set; }

        /// <summary>
        /// Gets or Sets SystemTimezoneId
        /// </summary>
        [DataMember(Name = "systemTimezoneId", IsRequired = true, EmitDefaultValue = true)]
        public string SystemTimezoneId { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ServerInfoDto {\n");
            sb.Append("  VarVersion: ").Append(VarVersion).Append("\n");
            sb.Append("  ServerTime: ").Append(ServerTime).Append("\n");
            sb.Append("  SystemMaintenanceSchedule: ").Append(SystemMaintenanceSchedule).Append("\n");
            sb.Append("  AppFiles: ").Append(AppFiles).Append("\n");
            sb.Append("  SystemTimezoneId: ").Append(SystemTimezoneId).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

    }

}
