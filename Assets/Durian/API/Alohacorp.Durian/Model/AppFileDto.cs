/*
 * Durian API - aloha-demo
 *
 * Durian API (aloha-demo) OpenApi Documentation
 *
 * The version of the OpenAPI document: 0.4.12
 * Contact: devlopment@aloha-corp.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = Alohacorp.Durian.Client.OpenAPIDateConverter;

namespace Alohacorp.Durian.Model
{
    /// <summary>
    /// AppFileDto
    /// </summary>
    [DataContract(Name = "AppFileDto")]
    public partial class AppFileDto
    {
        /// <summary>
        /// Defines Type
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum TypeEnum
        {
            /// <summary>
            /// Enum PLAYER for value: PLAYER
            /// </summary>
            [EnumMember(Value = "PLAYER")]
            PLAYER = 1,

            /// <summary>
            /// Enum APP for value: APP
            /// </summary>
            [EnumMember(Value = "APP")]
            APP = 2
        }


        /// <summary>
        /// Gets or Sets Type
        /// </summary>
        [DataMember(Name = "type", IsRequired = true, EmitDefaultValue = true)]
        public TypeEnum Type { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="AppFileDto" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected AppFileDto() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="AppFileDto" /> class.
        /// </summary>
        /// <param name="id">id.</param>
        /// <param name="ownerUid">ownerUid.</param>
        /// <param name="type">type (required).</param>
        /// <param name="blobName">blobName.</param>
        /// <param name="createdAt">createdAt (required).</param>
        /// <param name="content">content.</param>
        public AppFileDto(string id = default(string), string ownerUid = default(string), TypeEnum type = default(TypeEnum), string blobName = default(string), long? createdAt = default(long?), string content = default(string))
        {
            this.Type = type;
            // to ensure "createdAt" is required (not null)
            if (createdAt == null)
            {
                throw new ArgumentNullException("createdAt is a required property for AppFileDto and cannot be null");
            }
            this.CreatedAt = createdAt;
            this.Id = id;
            this.OwnerUid = ownerUid;
            this.BlobName = blobName;
            this.Content = content;
        }

        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name = "id", EmitDefaultValue = false)]
        public string Id { get; set; }

        /// <summary>
        /// Gets or Sets OwnerUid
        /// </summary>
        [DataMember(Name = "ownerUid", EmitDefaultValue = false)]
        public string OwnerUid { get; set; }

        /// <summary>
        /// Gets or Sets BlobName
        /// </summary>
        [DataMember(Name = "blobName", EmitDefaultValue = false)]
        public string BlobName { get; set; }

        /// <summary>
        /// Gets or Sets CreatedAt
        /// </summary>
        [DataMember(Name = "createdAt", IsRequired = true, EmitDefaultValue = true)]
        public long? CreatedAt { get; set; }

        /// <summary>
        /// Gets or Sets Content
        /// </summary>
        [DataMember(Name = "content", EmitDefaultValue = false)]
        public string Content { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class AppFileDto {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  OwnerUid: ").Append(OwnerUid).Append("\n");
            sb.Append("  Type: ").Append(Type).Append("\n");
            sb.Append("  BlobName: ").Append(BlobName).Append("\n");
            sb.Append("  CreatedAt: ").Append(CreatedAt).Append("\n");
            sb.Append("  Content: ").Append(Content).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

    }

}
