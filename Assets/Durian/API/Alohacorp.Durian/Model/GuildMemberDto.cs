/*
 * Durian API - aloha-demo
 *
 * Durian API (aloha-demo) OpenApi Documentation
 *
 * The version of the OpenAPI document: 0.4.12
 * Contact: devlopment@aloha-corp.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = Alohacorp.Durian.Client.OpenAPIDateConverter;

namespace Alohacorp.Durian.Model
{
    /// <summary>
    /// GuildMemberDto
    /// </summary>
    [DataContract(Name = "GuildMemberDto")]
    public partial class GuildMemberDto
    {
        /// <summary>
        /// Defines Role
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum RoleEnum
        {
            /// <summary>
            /// Enum MEMBER for value: MEMBER
            /// </summary>
            [EnumMember(Value = "MEMBER")]
            MEMBER = 1,

            /// <summary>
            /// Enum MANAGER for value: MANAGER
            /// </summary>
            [EnumMember(Value = "MANAGER")]
            MANAGER = 2,

            /// <summary>
            /// Enum VICEMASTER for value: VICE_MASTER
            /// </summary>
            [EnumMember(Value = "VICE_MASTER")]
            VICEMASTER = 3,

            /// <summary>
            /// Enum MASTER for value: MASTER
            /// </summary>
            [EnumMember(Value = "MASTER")]
            MASTER = 4
        }


        /// <summary>
        /// Gets or Sets Role
        /// </summary>
        [DataMember(Name = "role", IsRequired = true, EmitDefaultValue = true)]
        public RoleEnum Role { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="GuildMemberDto" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected GuildMemberDto() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="GuildMemberDto" /> class.
        /// </summary>
        /// <param name="guildId">guildId (required).</param>
        /// <param name="playerUid">playerUid (required).</param>
        /// <param name="role">role (required).</param>
        /// <param name="expContributed">expContributed (required).</param>
        /// <param name="lastActiveAt">lastActiveAt (required).</param>
        /// <param name="createdAt">createdAt (required).</param>
        public GuildMemberDto(string guildId = default(string), string playerUid = default(string), RoleEnum role = default(RoleEnum), long? expContributed = default(long?), long? lastActiveAt = default(long?), long? createdAt = default(long?))
        {
            // to ensure "guildId" is required (not null)
            if (guildId == null)
            {
                throw new ArgumentNullException("guildId is a required property for GuildMemberDto and cannot be null");
            }
            this.GuildId = guildId;
            // to ensure "playerUid" is required (not null)
            if (playerUid == null)
            {
                throw new ArgumentNullException("playerUid is a required property for GuildMemberDto and cannot be null");
            }
            this.PlayerUid = playerUid;
            this.Role = role;
            // to ensure "expContributed" is required (not null)
            if (expContributed == null)
            {
                throw new ArgumentNullException("expContributed is a required property for GuildMemberDto and cannot be null");
            }
            this.ExpContributed = expContributed;
            // to ensure "lastActiveAt" is required (not null)
            if (lastActiveAt == null)
            {
                throw new ArgumentNullException("lastActiveAt is a required property for GuildMemberDto and cannot be null");
            }
            this.LastActiveAt = lastActiveAt;
            // to ensure "createdAt" is required (not null)
            if (createdAt == null)
            {
                throw new ArgumentNullException("createdAt is a required property for GuildMemberDto and cannot be null");
            }
            this.CreatedAt = createdAt;
        }

        /// <summary>
        /// Gets or Sets GuildId
        /// </summary>
        [DataMember(Name = "guildId", IsRequired = true, EmitDefaultValue = true)]
        public string GuildId { get; set; }

        /// <summary>
        /// Gets or Sets PlayerUid
        /// </summary>
        [DataMember(Name = "playerUid", IsRequired = true, EmitDefaultValue = true)]
        public string PlayerUid { get; set; }

        /// <summary>
        /// Gets or Sets ExpContributed
        /// </summary>
        [DataMember(Name = "expContributed", IsRequired = true, EmitDefaultValue = true)]
        public long? ExpContributed { get; set; }

        /// <summary>
        /// Gets or Sets LastActiveAt
        /// </summary>
        [DataMember(Name = "lastActiveAt", IsRequired = true, EmitDefaultValue = true)]
        public long? LastActiveAt { get; set; }

        /// <summary>
        /// Gets or Sets CreatedAt
        /// </summary>
        [DataMember(Name = "createdAt", IsRequired = true, EmitDefaultValue = true)]
        public long? CreatedAt { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class GuildMemberDto {\n");
            sb.Append("  GuildId: ").Append(GuildId).Append("\n");
            sb.Append("  PlayerUid: ").Append(PlayerUid).Append("\n");
            sb.Append("  Role: ").Append(Role).Append("\n");
            sb.Append("  ExpContributed: ").Append(ExpContributed).Append("\n");
            sb.Append("  LastActiveAt: ").Append(LastActiveAt).Append("\n");
            sb.Append("  CreatedAt: ").Append(CreatedAt).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

    }

}
