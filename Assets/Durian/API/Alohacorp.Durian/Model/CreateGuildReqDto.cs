/*
 * Durian API - aloha-demo
 *
 * Durian API (aloha-demo) OpenApi Documentation
 *
 * The version of the OpenAPI document: 0.4.12
 * Contact: devlopment@aloha-corp.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = Alohacorp.Durian.Client.OpenAPIDateConverter;

namespace Alohacorp.Durian.Model
{
    /// <summary>
    /// CreateGuildReqDto
    /// </summary>
    [DataContract(Name = "CreateGuildReqDto")]
    public partial class CreateGuildReqDto
    {
        /// <summary>
        /// Defines JoinApprovalType
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum JoinApprovalTypeEnum
        {
            /// <summary>
            /// Enum AUTO for value: AUTO
            /// </summary>
            [EnumMember(Value = "AUTO")]
            AUTO = 1,

            /// <summary>
            /// Enum MANUAL for value: MANUAL
            /// </summary>
            [EnumMember(Value = "MANUAL")]
            MANUAL = 2
        }


        /// <summary>
        /// Gets or Sets JoinApprovalType
        /// </summary>
        [DataMember(Name = "joinApprovalType", IsRequired = true, EmitDefaultValue = true)]
        public JoinApprovalTypeEnum JoinApprovalType { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="CreateGuildReqDto" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected CreateGuildReqDto() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="CreateGuildReqDto" /> class.
        /// </summary>
        /// <param name="name">name (required).</param>
        /// <param name="country">country (required).</param>
        /// <param name="joinApprovalType">joinApprovalType (required).</param>
        /// <param name="description">description.</param>
        public CreateGuildReqDto(string name = default(string), string country = default(string), JoinApprovalTypeEnum joinApprovalType = default(JoinApprovalTypeEnum), string description = default(string))
        {
            // to ensure "name" is required (not null)
            if (name == null)
            {
                throw new ArgumentNullException("name is a required property for CreateGuildReqDto and cannot be null");
            }
            this.Name = name;
            // to ensure "country" is required (not null)
            if (country == null)
            {
                throw new ArgumentNullException("country is a required property for CreateGuildReqDto and cannot be null");
            }
            this.Country = country;
            this.JoinApprovalType = joinApprovalType;
            this.Description = description;
        }

        /// <summary>
        /// Gets or Sets Name
        /// </summary>
        [DataMember(Name = "name", IsRequired = true, EmitDefaultValue = true)]
        public string Name { get; set; }

        /// <summary>
        /// Gets or Sets Country
        /// </summary>
        [DataMember(Name = "country", IsRequired = true, EmitDefaultValue = true)]
        public string Country { get; set; }

        /// <summary>
        /// Gets or Sets Description
        /// </summary>
        [DataMember(Name = "description", EmitDefaultValue = false)]
        public string Description { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CreateGuildReqDto {\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  Country: ").Append(Country).Append("\n");
            sb.Append("  JoinApprovalType: ").Append(JoinApprovalType).Append("\n");
            sb.Append("  Description: ").Append(Description).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

    }

}
