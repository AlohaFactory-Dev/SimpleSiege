/*
 * Durian API - aloha-demo
 *
 * Durian API (aloha-demo) OpenApi Documentation
 *
 * The version of the OpenAPI document: 0.4.12
 * Contact: devlopment@aloha-corp.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = Alohacorp.Durian.Client.OpenAPIDateConverter;

namespace Alohacorp.Durian.Model
{
    /// <summary>
    /// LeaderboardResetRuleDto
    /// </summary>
    [DataContract(Name = "LeaderboardResetRuleDto")]
    public partial class LeaderboardResetRuleDto
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="LeaderboardResetRuleDto" /> class.
        /// </summary>
        /// <param name="initialScore">Initial score for all participants. null means the score will be kept as is..</param>
        /// <param name="initialScoreGameDataPathJsonStr">JSON array string. e.g. [\&quot;a\&quot;, 1, \&quot;b\&quot;] -&gt; gameData[\&quot;a\&quot;][1][\&quot;b\&quot;].</param>
        /// <param name="defaultRewardMail">Default reward mail for all participants..</param>
        /// <param name="rewardConditions">rewardConditions.</param>
        /// <param name="resetConditions">resetConditions.</param>
        public LeaderboardResetRuleDto(decimal? initialScore = default(decimal?), string initialScoreGameDataPathJsonStr = default(string), MailDto defaultRewardMail = default(MailDto), List<LeaderboardRewardConditionDto> rewardConditions = default(List<LeaderboardRewardConditionDto>), List<LeaderboardResetConditionDto> resetConditions = default(List<LeaderboardResetConditionDto>))
        {
            this.InitialScore = initialScore;
            this.InitialScoreGameDataPathJsonStr = initialScoreGameDataPathJsonStr;
            this.DefaultRewardMail = defaultRewardMail;
            this.RewardConditions = rewardConditions;
            this.ResetConditions = resetConditions;
        }

        /// <summary>
        /// Initial score for all participants. null means the score will be kept as is.
        /// </summary>
        /// <value>Initial score for all participants. null means the score will be kept as is.</value>
        [DataMember(Name = "initialScore", EmitDefaultValue = false)]
        public decimal? InitialScore { get; set; }

        /// <summary>
        /// JSON array string. e.g. [\&quot;a\&quot;, 1, \&quot;b\&quot;] -&gt; gameData[\&quot;a\&quot;][1][\&quot;b\&quot;]
        /// </summary>
        /// <value>JSON array string. e.g. [\&quot;a\&quot;, 1, \&quot;b\&quot;] -&gt; gameData[\&quot;a\&quot;][1][\&quot;b\&quot;]</value>
        /// <example>[field_a, 1, field_b]</example>
        [DataMember(Name = "initialScoreGameDataPathJsonStr", EmitDefaultValue = false)]
        public string InitialScoreGameDataPathJsonStr { get; set; }

        /// <summary>
        /// Default reward mail for all participants.
        /// </summary>
        /// <value>Default reward mail for all participants.</value>
        [DataMember(Name = "defaultRewardMail", EmitDefaultValue = false)]
        public MailDto DefaultRewardMail { get; set; }

        /// <summary>
        /// Gets or Sets RewardConditions
        /// </summary>
        [DataMember(Name = "rewardConditions", EmitDefaultValue = false)]
        public List<LeaderboardRewardConditionDto> RewardConditions { get; set; }

        /// <summary>
        /// Gets or Sets ResetConditions
        /// </summary>
        [DataMember(Name = "resetConditions", EmitDefaultValue = false)]
        public List<LeaderboardResetConditionDto> ResetConditions { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class LeaderboardResetRuleDto {\n");
            sb.Append("  InitialScore: ").Append(InitialScore).Append("\n");
            sb.Append("  InitialScoreGameDataPathJsonStr: ").Append(InitialScoreGameDataPathJsonStr).Append("\n");
            sb.Append("  DefaultRewardMail: ").Append(DefaultRewardMail).Append("\n");
            sb.Append("  RewardConditions: ").Append(RewardConditions).Append("\n");
            sb.Append("  ResetConditions: ").Append(ResetConditions).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

    }

}
