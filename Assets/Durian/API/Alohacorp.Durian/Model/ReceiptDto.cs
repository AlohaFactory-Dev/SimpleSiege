/*
 * Durian API - aloha-demo
 *
 * Durian API (aloha-demo) OpenApi Documentation
 *
 * The version of the OpenAPI document: 0.4.12
 * Contact: devlopment@aloha-corp.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = Alohacorp.Durian.Client.OpenAPIDateConverter;

namespace Alohacorp.Durian.Model
{
    /// <summary>
    /// ReceiptDto
    /// </summary>
    [DataContract(Name = "ReceiptDto")]
    public partial class ReceiptDto
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ReceiptDto" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected ReceiptDto() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="ReceiptDto" /> class.
        /// </summary>
        /// <param name="id">id (required).</param>
        /// <param name="uid">uid.</param>
        /// <param name="validatedAt">validatedAt.</param>
        /// <param name="isValid">isValid.</param>
        /// <param name="playStoreReceipt">playStoreReceipt.</param>
        /// <param name="appStoreReceipt">appStoreReceipt.</param>
        public ReceiptDto(Guid id = default(Guid), string uid = default(string), long? validatedAt = default(long?), bool isValid = default(bool), PlayStoreReceiptDto playStoreReceipt = default(PlayStoreReceiptDto), AppStoreReceiptDto appStoreReceipt = default(AppStoreReceiptDto))
        {
            this.Id = id;
            this.Uid = uid;
            this.ValidatedAt = validatedAt;
            this.IsValid = isValid;
            this.PlayStoreReceipt = playStoreReceipt;
            this.AppStoreReceipt = appStoreReceipt;
        }

        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name = "id", IsRequired = true, EmitDefaultValue = true)]
        public Guid Id { get; set; }

        /// <summary>
        /// Gets or Sets Uid
        /// </summary>
        [DataMember(Name = "uid", EmitDefaultValue = false)]
        public string Uid { get; set; }

        /// <summary>
        /// Gets or Sets ValidatedAt
        /// </summary>
        [DataMember(Name = "validatedAt", EmitDefaultValue = false)]
        public long? ValidatedAt { get; set; }

        /// <summary>
        /// Gets or Sets IsValid
        /// </summary>
        [DataMember(Name = "isValid", EmitDefaultValue = true)]
        public bool IsValid { get; set; }

        /// <summary>
        /// Gets or Sets PlayStoreReceipt
        /// </summary>
        [DataMember(Name = "playStoreReceipt", EmitDefaultValue = false)]
        public PlayStoreReceiptDto PlayStoreReceipt { get; set; }

        /// <summary>
        /// Gets or Sets AppStoreReceipt
        /// </summary>
        [DataMember(Name = "appStoreReceipt", EmitDefaultValue = false)]
        public AppStoreReceiptDto AppStoreReceipt { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ReceiptDto {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Uid: ").Append(Uid).Append("\n");
            sb.Append("  ValidatedAt: ").Append(ValidatedAt).Append("\n");
            sb.Append("  IsValid: ").Append(IsValid).Append("\n");
            sb.Append("  PlayStoreReceipt: ").Append(PlayStoreReceipt).Append("\n");
            sb.Append("  AppStoreReceipt: ").Append(AppStoreReceipt).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

    }

}
