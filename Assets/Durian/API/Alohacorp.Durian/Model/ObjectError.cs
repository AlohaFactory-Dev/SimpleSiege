/*
 * Durian API - aloha-demo
 *
 * Durian API (aloha-demo) OpenApi Documentation
 *
 * The version of the OpenAPI document: 0.4.12
 * Contact: devlopment@aloha-corp.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = Alohacorp.Durian.Client.OpenAPIDateConverter;

namespace Alohacorp.Durian.Model
{
    /// <summary>
    /// ObjectError
    /// </summary>
    [DataContract(Name = "ObjectError")]
    public partial class ObjectError
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ObjectError" /> class.
        /// </summary>
        /// <param name="codes">codes.</param>
        /// <param name="arguments">arguments.</param>
        /// <param name="defaultMessage">defaultMessage.</param>
        /// <param name="objectName">objectName.</param>
        /// <param name="code">code.</param>
        public ObjectError(List<string> codes = default(List<string>), List<Object> arguments = default(List<Object>), string defaultMessage = default(string), string objectName = default(string), string code = default(string))
        {
            this.Codes = codes;
            this.Arguments = arguments;
            this.DefaultMessage = defaultMessage;
            this.ObjectName = objectName;
            this.Code = code;
        }

        /// <summary>
        /// Gets or Sets Codes
        /// </summary>
        [DataMember(Name = "codes", EmitDefaultValue = false)]
        public List<string> Codes { get; set; }

        /// <summary>
        /// Gets or Sets Arguments
        /// </summary>
        [DataMember(Name = "arguments", EmitDefaultValue = false)]
        public List<Object> Arguments { get; set; }

        /// <summary>
        /// Gets or Sets DefaultMessage
        /// </summary>
        [DataMember(Name = "defaultMessage", EmitDefaultValue = false)]
        public string DefaultMessage { get; set; }

        /// <summary>
        /// Gets or Sets ObjectName
        /// </summary>
        [DataMember(Name = "objectName", EmitDefaultValue = false)]
        public string ObjectName { get; set; }

        /// <summary>
        /// Gets or Sets Code
        /// </summary>
        [DataMember(Name = "code", EmitDefaultValue = false)]
        public string Code { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ObjectError {\n");
            sb.Append("  Codes: ").Append(Codes).Append("\n");
            sb.Append("  Arguments: ").Append(Arguments).Append("\n");
            sb.Append("  DefaultMessage: ").Append(DefaultMessage).Append("\n");
            sb.Append("  ObjectName: ").Append(ObjectName).Append("\n");
            sb.Append("  Code: ").Append(Code).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

    }

}
