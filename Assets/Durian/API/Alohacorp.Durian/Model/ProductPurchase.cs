/*
 * Durian API - aloha-demo
 *
 * Durian API (aloha-demo) OpenApi Documentation
 *
 * The version of the OpenAPI document: 0.4.12
 * Contact: devlopment@aloha-corp.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = Alohacorp.Durian.Client.OpenAPIDateConverter;

namespace Alohacorp.Durian.Model
{
    /// <summary>
    /// ProductPurchase
    /// </summary>
    [DataContract(Name = "ProductPurchase")]
    public partial class ProductPurchase
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ProductPurchase" /> class.
        /// </summary>
        /// <param name="classInfo">classInfo.</param>
        /// <param name="acknowledgementState">acknowledgementState.</param>
        /// <param name="consumptionState">consumptionState.</param>
        /// <param name="developerPayload">developerPayload.</param>
        /// <param name="kind">kind.</param>
        /// <param name="obfuscatedExternalAccountId">obfuscatedExternalAccountId.</param>
        /// <param name="obfuscatedExternalProfileId">obfuscatedExternalProfileId.</param>
        /// <param name="orderId">orderId.</param>
        /// <param name="productId">productId.</param>
        /// <param name="purchaseState">purchaseState.</param>
        /// <param name="purchaseTimeMillis">purchaseTimeMillis.</param>
        /// <param name="purchaseToken">purchaseToken.</param>
        /// <param name="purchaseType">purchaseType.</param>
        /// <param name="quantity">quantity.</param>
        /// <param name="regionCode">regionCode.</param>
        /// <param name="factory">factory.</param>
        /// <param name="unknownKeys">unknownKeys.</param>
        /// <param name="empty">empty.</param>
        public ProductPurchase(ClassInfo classInfo = default(ClassInfo), int? acknowledgementState = default(int?), int? consumptionState = default(int?), string developerPayload = default(string), string kind = default(string), string obfuscatedExternalAccountId = default(string), string obfuscatedExternalProfileId = default(string), string orderId = default(string), string productId = default(string), int? purchaseState = default(int?), long? purchaseTimeMillis = default(long?), string purchaseToken = default(string), int? purchaseType = default(int?), int? quantity = default(int?), string regionCode = default(string), Object factory = default(Object), Dictionary<string, Object> unknownKeys = default(Dictionary<string, Object>), bool empty = default(bool))
        {
            this.ClassInfo = classInfo;
            this.AcknowledgementState = acknowledgementState;
            this.ConsumptionState = consumptionState;
            this.DeveloperPayload = developerPayload;
            this.Kind = kind;
            this.ObfuscatedExternalAccountId = obfuscatedExternalAccountId;
            this.ObfuscatedExternalProfileId = obfuscatedExternalProfileId;
            this.OrderId = orderId;
            this.ProductId = productId;
            this.PurchaseState = purchaseState;
            this.PurchaseTimeMillis = purchaseTimeMillis;
            this.PurchaseToken = purchaseToken;
            this.PurchaseType = purchaseType;
            this.Quantity = quantity;
            this.RegionCode = regionCode;
            this.Factory = factory;
            this.UnknownKeys = unknownKeys;
            this.Empty = empty;
        }

        /// <summary>
        /// Gets or Sets ClassInfo
        /// </summary>
        [DataMember(Name = "classInfo", EmitDefaultValue = false)]
        public ClassInfo ClassInfo { get; set; }

        /// <summary>
        /// Gets or Sets AcknowledgementState
        /// </summary>
        [DataMember(Name = "acknowledgementState", EmitDefaultValue = false)]
        public int? AcknowledgementState { get; set; }

        /// <summary>
        /// Gets or Sets ConsumptionState
        /// </summary>
        [DataMember(Name = "consumptionState", EmitDefaultValue = false)]
        public int? ConsumptionState { get; set; }

        /// <summary>
        /// Gets or Sets DeveloperPayload
        /// </summary>
        [DataMember(Name = "developerPayload", EmitDefaultValue = false)]
        public string DeveloperPayload { get; set; }

        /// <summary>
        /// Gets or Sets Kind
        /// </summary>
        [DataMember(Name = "kind", EmitDefaultValue = false)]
        public string Kind { get; set; }

        /// <summary>
        /// Gets or Sets ObfuscatedExternalAccountId
        /// </summary>
        [DataMember(Name = "obfuscatedExternalAccountId", EmitDefaultValue = false)]
        public string ObfuscatedExternalAccountId { get; set; }

        /// <summary>
        /// Gets or Sets ObfuscatedExternalProfileId
        /// </summary>
        [DataMember(Name = "obfuscatedExternalProfileId", EmitDefaultValue = false)]
        public string ObfuscatedExternalProfileId { get; set; }

        /// <summary>
        /// Gets or Sets OrderId
        /// </summary>
        [DataMember(Name = "orderId", EmitDefaultValue = false)]
        public string OrderId { get; set; }

        /// <summary>
        /// Gets or Sets ProductId
        /// </summary>
        [DataMember(Name = "productId", EmitDefaultValue = false)]
        public string ProductId { get; set; }

        /// <summary>
        /// Gets or Sets PurchaseState
        /// </summary>
        [DataMember(Name = "purchaseState", EmitDefaultValue = false)]
        public int? PurchaseState { get; set; }

        /// <summary>
        /// Gets or Sets PurchaseTimeMillis
        /// </summary>
        [DataMember(Name = "purchaseTimeMillis", EmitDefaultValue = false)]
        public long? PurchaseTimeMillis { get; set; }

        /// <summary>
        /// Gets or Sets PurchaseToken
        /// </summary>
        [DataMember(Name = "purchaseToken", EmitDefaultValue = false)]
        public string PurchaseToken { get; set; }

        /// <summary>
        /// Gets or Sets PurchaseType
        /// </summary>
        [DataMember(Name = "purchaseType", EmitDefaultValue = false)]
        public int? PurchaseType { get; set; }

        /// <summary>
        /// Gets or Sets Quantity
        /// </summary>
        [DataMember(Name = "quantity", EmitDefaultValue = false)]
        public int? Quantity { get; set; }

        /// <summary>
        /// Gets or Sets RegionCode
        /// </summary>
        [DataMember(Name = "regionCode", EmitDefaultValue = false)]
        public string RegionCode { get; set; }

        /// <summary>
        /// Gets or Sets Factory
        /// </summary>
        [DataMember(Name = "factory", EmitDefaultValue = false)]
        public Object Factory { get; set; }

        /// <summary>
        /// Gets or Sets UnknownKeys
        /// </summary>
        [DataMember(Name = "unknownKeys", EmitDefaultValue = false)]
        public Dictionary<string, Object> UnknownKeys { get; set; }

        /// <summary>
        /// Gets or Sets Empty
        /// </summary>
        [DataMember(Name = "empty", EmitDefaultValue = true)]
        public bool Empty { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ProductPurchase {\n");
            sb.Append("  ClassInfo: ").Append(ClassInfo).Append("\n");
            sb.Append("  AcknowledgementState: ").Append(AcknowledgementState).Append("\n");
            sb.Append("  ConsumptionState: ").Append(ConsumptionState).Append("\n");
            sb.Append("  DeveloperPayload: ").Append(DeveloperPayload).Append("\n");
            sb.Append("  Kind: ").Append(Kind).Append("\n");
            sb.Append("  ObfuscatedExternalAccountId: ").Append(ObfuscatedExternalAccountId).Append("\n");
            sb.Append("  ObfuscatedExternalProfileId: ").Append(ObfuscatedExternalProfileId).Append("\n");
            sb.Append("  OrderId: ").Append(OrderId).Append("\n");
            sb.Append("  ProductId: ").Append(ProductId).Append("\n");
            sb.Append("  PurchaseState: ").Append(PurchaseState).Append("\n");
            sb.Append("  PurchaseTimeMillis: ").Append(PurchaseTimeMillis).Append("\n");
            sb.Append("  PurchaseToken: ").Append(PurchaseToken).Append("\n");
            sb.Append("  PurchaseType: ").Append(PurchaseType).Append("\n");
            sb.Append("  Quantity: ").Append(Quantity).Append("\n");
            sb.Append("  RegionCode: ").Append(RegionCode).Append("\n");
            sb.Append("  Factory: ").Append(Factory).Append("\n");
            sb.Append("  UnknownKeys: ").Append(UnknownKeys).Append("\n");
            sb.Append("  Empty: ").Append(Empty).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

    }

}
