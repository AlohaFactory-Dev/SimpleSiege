/*
 * Durian API - aloha-demo
 *
 * Durian API (aloha-demo) OpenApi Documentation
 *
 * The version of the OpenAPI document: 0.4.12
 * Contact: devlopment@aloha-corp.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = Alohacorp.Durian.Client.OpenAPIDateConverter;

namespace Alohacorp.Durian.Model
{
    /// <summary>
    /// ChatRoomDto
    /// </summary>
    [DataContract(Name = "ChatRoomDto")]
    public partial class ChatRoomDto
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ChatRoomDto" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected ChatRoomDto() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="ChatRoomDto" /> class.
        /// </summary>
        /// <param name="id">id (required).</param>
        /// <param name="chatChannelId">chatChannelId (required).</param>
        /// <param name="createdAt">createdAt (required).</param>
        /// <param name="updatedAt">updatedAt (required).</param>
        /// <param name="chatChannel">chatChannel.</param>
        public ChatRoomDto(string id = default(string), string chatChannelId = default(string), long? createdAt = default(long?), long? updatedAt = default(long?), ChatChannelDto chatChannel = default(ChatChannelDto))
        {
            // to ensure "id" is required (not null)
            if (id == null)
            {
                throw new ArgumentNullException("id is a required property for ChatRoomDto and cannot be null");
            }
            this.Id = id;
            // to ensure "chatChannelId" is required (not null)
            if (chatChannelId == null)
            {
                throw new ArgumentNullException("chatChannelId is a required property for ChatRoomDto and cannot be null");
            }
            this.ChatChannelId = chatChannelId;
            // to ensure "createdAt" is required (not null)
            if (createdAt == null)
            {
                throw new ArgumentNullException("createdAt is a required property for ChatRoomDto and cannot be null");
            }
            this.CreatedAt = createdAt;
            // to ensure "updatedAt" is required (not null)
            if (updatedAt == null)
            {
                throw new ArgumentNullException("updatedAt is a required property for ChatRoomDto and cannot be null");
            }
            this.UpdatedAt = updatedAt;
            this.ChatChannel = chatChannel;
        }

        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name = "id", IsRequired = true, EmitDefaultValue = true)]
        public string Id { get; set; }

        /// <summary>
        /// Gets or Sets ChatChannelId
        /// </summary>
        [DataMember(Name = "chatChannelId", IsRequired = true, EmitDefaultValue = true)]
        public string ChatChannelId { get; set; }

        /// <summary>
        /// Gets or Sets CreatedAt
        /// </summary>
        [DataMember(Name = "createdAt", IsRequired = true, EmitDefaultValue = true)]
        public long? CreatedAt { get; set; }

        /// <summary>
        /// Gets or Sets UpdatedAt
        /// </summary>
        [DataMember(Name = "updatedAt", IsRequired = true, EmitDefaultValue = true)]
        public long? UpdatedAt { get; set; }

        /// <summary>
        /// Gets or Sets ChatChannel
        /// </summary>
        [DataMember(Name = "chatChannel", EmitDefaultValue = false)]
        public ChatChannelDto ChatChannel { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ChatRoomDto {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  ChatChannelId: ").Append(ChatChannelId).Append("\n");
            sb.Append("  CreatedAt: ").Append(CreatedAt).Append("\n");
            sb.Append("  UpdatedAt: ").Append(UpdatedAt).Append("\n");
            sb.Append("  ChatChannel: ").Append(ChatChannel).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

    }

}
