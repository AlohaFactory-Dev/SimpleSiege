/*
 * Durian API - aloha-demo
 *
 * Durian API (aloha-demo) OpenApi Documentation
 *
 * The version of the OpenAPI document: 0.4.12
 * Contact: devlopment@aloha-corp.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = Alohacorp.Durian.Client.OpenAPIDateConverter;

namespace Alohacorp.Durian.Model
{
    /// <summary>
    /// LeagueDivisionDto
    /// </summary>
    [DataContract(Name = "LeagueDivisionDto")]
    public partial class LeagueDivisionDto
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="LeagueDivisionDto" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected LeagueDivisionDto() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="LeagueDivisionDto" /> class.
        /// </summary>
        /// <param name="id">id (required).</param>
        /// <param name="leagueId">leagueId (required).</param>
        /// <param name="leaderboardId">leaderboardId (required).</param>
        /// <param name="league">league.</param>
        /// <param name="leaderboard">leaderboard.</param>
        public LeagueDivisionDto(string id = default(string), string leagueId = default(string), string leaderboardId = default(string), LeagueDto league = default(LeagueDto), LeaderboardDto leaderboard = default(LeaderboardDto))
        {
            // to ensure "id" is required (not null)
            if (id == null)
            {
                throw new ArgumentNullException("id is a required property for LeagueDivisionDto and cannot be null");
            }
            this.Id = id;
            // to ensure "leagueId" is required (not null)
            if (leagueId == null)
            {
                throw new ArgumentNullException("leagueId is a required property for LeagueDivisionDto and cannot be null");
            }
            this.LeagueId = leagueId;
            // to ensure "leaderboardId" is required (not null)
            if (leaderboardId == null)
            {
                throw new ArgumentNullException("leaderboardId is a required property for LeagueDivisionDto and cannot be null");
            }
            this.LeaderboardId = leaderboardId;
            this.League = league;
            this.Leaderboard = leaderboard;
        }

        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name = "id", IsRequired = true, EmitDefaultValue = true)]
        public string Id { get; set; }

        /// <summary>
        /// Gets or Sets LeagueId
        /// </summary>
        [DataMember(Name = "leagueId", IsRequired = true, EmitDefaultValue = true)]
        public string LeagueId { get; set; }

        /// <summary>
        /// Gets or Sets LeaderboardId
        /// </summary>
        [DataMember(Name = "leaderboardId", IsRequired = true, EmitDefaultValue = true)]
        public string LeaderboardId { get; set; }

        /// <summary>
        /// Gets or Sets League
        /// </summary>
        [DataMember(Name = "league", EmitDefaultValue = false)]
        public LeagueDto League { get; set; }

        /// <summary>
        /// Gets or Sets Leaderboard
        /// </summary>
        [DataMember(Name = "leaderboard", EmitDefaultValue = false)]
        public LeaderboardDto Leaderboard { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class LeagueDivisionDto {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  LeagueId: ").Append(LeagueId).Append("\n");
            sb.Append("  LeaderboardId: ").Append(LeaderboardId).Append("\n");
            sb.Append("  League: ").Append(League).Append("\n");
            sb.Append("  Leaderboard: ").Append(Leaderboard).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

    }

}
