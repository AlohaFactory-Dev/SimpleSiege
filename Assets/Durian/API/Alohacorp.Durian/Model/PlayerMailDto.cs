/*
 * Durian API - aloha-demo
 *
 * Durian API (aloha-demo) OpenApi Documentation
 *
 * The version of the OpenAPI document: 0.4.12
 * Contact: devlopment@aloha-corp.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = Alohacorp.Durian.Client.OpenAPIDateConverter;

namespace Alohacorp.Durian.Model
{
    /// <summary>
    /// PlayerMailDto
    /// </summary>
    [DataContract(Name = "PlayerMailDto")]
    public partial class PlayerMailDto
    {
        /// <summary>
        /// Defines State
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum StateEnum
        {
            /// <summary>
            /// Enum UNREAD for value: UNREAD
            /// </summary>
            [EnumMember(Value = "UNREAD")]
            UNREAD = 1,

            /// <summary>
            /// Enum READ for value: READ
            /// </summary>
            [EnumMember(Value = "READ")]
            READ = 2,

            /// <summary>
            /// Enum RECEIVED for value: RECEIVED
            /// </summary>
            [EnumMember(Value = "RECEIVED")]
            RECEIVED = 3
        }


        /// <summary>
        /// Gets or Sets State
        /// </summary>
        [DataMember(Name = "state", IsRequired = true, EmitDefaultValue = true)]
        public StateEnum State { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="PlayerMailDto" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected PlayerMailDto() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="PlayerMailDto" /> class.
        /// </summary>
        /// <param name="id">id (required).</param>
        /// <param name="mail">mail (required).</param>
        /// <param name="playerUid">playerUid.</param>
        /// <param name="state">state (required).</param>
        /// <param name="receivedAt">receivedAt.</param>
        /// <param name="expiresAt">expiresAt.</param>
        /// <param name="senderUid">senderUid.</param>
        /// <param name="sentAt">sentAt (required).</param>
        /// <param name="readAt">readAt.</param>
        /// <param name="mailTaskId">mailTaskId.</param>
        /// <param name="couponId">couponId.</param>
        public PlayerMailDto(string id = default(string), MailDto mail = default(MailDto), string playerUid = default(string), StateEnum state = default(StateEnum), long? receivedAt = default(long?), long? expiresAt = default(long?), string senderUid = default(string), long? sentAt = default(long?), long? readAt = default(long?), string mailTaskId = default(string), string couponId = default(string))
        {
            // to ensure "id" is required (not null)
            if (id == null)
            {
                throw new ArgumentNullException("id is a required property for PlayerMailDto and cannot be null");
            }
            this.Id = id;
            // to ensure "mail" is required (not null)
            if (mail == null)
            {
                throw new ArgumentNullException("mail is a required property for PlayerMailDto and cannot be null");
            }
            this.Mail = mail;
            this.State = state;
            // to ensure "sentAt" is required (not null)
            if (sentAt == null)
            {
                throw new ArgumentNullException("sentAt is a required property for PlayerMailDto and cannot be null");
            }
            this.SentAt = sentAt;
            this.PlayerUid = playerUid;
            this.ReceivedAt = receivedAt;
            this.ExpiresAt = expiresAt;
            this.SenderUid = senderUid;
            this.ReadAt = readAt;
            this.MailTaskId = mailTaskId;
            this.CouponId = couponId;
        }

        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name = "id", IsRequired = true, EmitDefaultValue = true)]
        public string Id { get; set; }

        /// <summary>
        /// Gets or Sets Mail
        /// </summary>
        [DataMember(Name = "mail", IsRequired = true, EmitDefaultValue = true)]
        public MailDto Mail { get; set; }

        /// <summary>
        /// Gets or Sets PlayerUid
        /// </summary>
        [DataMember(Name = "playerUid", EmitDefaultValue = false)]
        public string PlayerUid { get; set; }

        /// <summary>
        /// Gets or Sets ReceivedAt
        /// </summary>
        [DataMember(Name = "receivedAt", EmitDefaultValue = false)]
        public long? ReceivedAt { get; set; }

        /// <summary>
        /// Gets or Sets ExpiresAt
        /// </summary>
        [DataMember(Name = "expiresAt", EmitDefaultValue = false)]
        public long? ExpiresAt { get; set; }

        /// <summary>
        /// Gets or Sets SenderUid
        /// </summary>
        [DataMember(Name = "senderUid", EmitDefaultValue = false)]
        public string SenderUid { get; set; }

        /// <summary>
        /// Gets or Sets SentAt
        /// </summary>
        [DataMember(Name = "sentAt", IsRequired = true, EmitDefaultValue = true)]
        public long? SentAt { get; set; }

        /// <summary>
        /// Gets or Sets ReadAt
        /// </summary>
        [DataMember(Name = "readAt", EmitDefaultValue = false)]
        public long? ReadAt { get; set; }

        /// <summary>
        /// Gets or Sets MailTaskId
        /// </summary>
        [DataMember(Name = "mailTaskId", EmitDefaultValue = false)]
        public string MailTaskId { get; set; }

        /// <summary>
        /// Gets or Sets CouponId
        /// </summary>
        [DataMember(Name = "couponId", EmitDefaultValue = false)]
        public string CouponId { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class PlayerMailDto {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Mail: ").Append(Mail).Append("\n");
            sb.Append("  PlayerUid: ").Append(PlayerUid).Append("\n");
            sb.Append("  State: ").Append(State).Append("\n");
            sb.Append("  ReceivedAt: ").Append(ReceivedAt).Append("\n");
            sb.Append("  ExpiresAt: ").Append(ExpiresAt).Append("\n");
            sb.Append("  SenderUid: ").Append(SenderUid).Append("\n");
            sb.Append("  SentAt: ").Append(SentAt).Append("\n");
            sb.Append("  ReadAt: ").Append(ReadAt).Append("\n");
            sb.Append("  MailTaskId: ").Append(MailTaskId).Append("\n");
            sb.Append("  CouponId: ").Append(CouponId).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

    }

}
